{
  "openapi": "3.1.0",
  "info": {
    "title": "Orgo API",
    "description": "API to manage projects and desktop instances for AI agents",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://www.orgo.ai/api"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/projects": {
      "get": {
        "summary": "List Projects",
        "description": "Retrieve all projects for the authenticated user",
        "operationId": "listProjects",
        "responses": {
          "200": {
            "description": "List of projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "projects": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Project"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Project",
        "description": "Create a new project with a desktop instance",
        "operationId": "createProject",
        "requestBody": {
          "description": "Optional configuration for the project",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "config": {
                    "$ref": "#/components/schemas/InstanceConfig"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Maximum project limit reached",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/projects/by-name/{name}": {
      "get": {
        "summary": "Get Project by Name",
        "description": "Retrieve a specific project by its name",
        "operationId": "getProjectByName",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the project to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{id}/start": {
      "post": {
        "summary": "Start Project",
        "description": "Start a stopped project",
        "operationId": "startProject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the project to start",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project started successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Project not found or access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{id}/restart": {
      "post": {
        "summary": "Restart Project",
        "description": "Restart a running project",
        "operationId": "restartProject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the project to restart",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project restarted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Project not found or access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{id}/delete": {
      "post": {
        "summary": "Delete Project",
        "description": "Delete a project and its associated desktop instance",
        "operationId": "deleteProject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the project to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "deleted": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Project not found or access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the project"
          },
          "name": {
            "type": "string",
            "description": "Name of the project"
          },
          "status": {
            "type": "string",
            "description": "Current status of the project",
            "enum": ["starting", "running", "stopped", "error"]
          },
          "desktop": {
            "$ref": "#/components/schemas/InstanceDetails"
          }
        }
      },
      "InstanceDetails": {
        "type": "object",
        "properties": {
          "webUrl": {
            "type": "string",
            "description": "URL to access the web interface"
          },
          "vncHost": {
            "type": "string",
            "description": "Host for VNC connections"
          },
          "vncPort": {
            "type": "integer",
            "description": "Port for VNC connections"
          },
          "webPort": {
            "type": "integer",
            "description": "Port for web interface"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the desktop instance"
          },
          "name": {
            "type": "string",
            "description": "Name of the desktop instance"
          },
          "customDomain": {
            "type": "string",
            "description": "Custom domain if configured"
          }
        }
      },
      "InstanceConfig": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "Docker image to use for the desktop"
          },
          "memoryMb": {
            "type": "integer",
            "description": "Memory allocation in MB",
            "default": 2048
          },
          "cpus": {
            "type": "integer",
            "description": "Number of CPUs to allocate",
            "default": 1
          },
          "env": {
            "type": "object",
            "description": "Environment variables to set in the container",
            "additionalProperties": {
              "type": "string"
            }
          },
          "region": {
            "type": "string",
            "description": "Region to deploy the instance",
            "default": "ewr"
          },
          "webPort": {
            "type": "integer",
            "description": "Port for web interface",
            "default": 6080
          },
          "vncPort": {
            "type": "integer",
            "description": "Port for VNC connections",
            "default": 5901
          },
          "customDomain": {
            "type": "string",
            "description": "Custom domain for the instance"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}